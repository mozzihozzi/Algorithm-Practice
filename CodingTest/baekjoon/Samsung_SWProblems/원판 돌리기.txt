//Baekjoon - 17822 : 원판 돌리기
//시뮬레이션 문제
#include <iostream>
#include <vector>

using namespace std;

int N, M, T;
int result;

int dir[4][2] = { {-1, 0}, {1, 0}, {0, -1}, {0, 1} };

vector<vector<int>> circlePanel;
vector<vector<int>> commands;

int calculate(){
	int sum = 0;
	for (int i = 0; i < N; i++){
		for (int j = 0; j < M; j++){
			sum += circlePanel[i][j];
		}
	}

	return sum;
}

void rotate(int cur){
	//회전할 판, 회전 방향, 몇번 회전
	for (int iN = commands[cur][0] - 1; iN < N; iN += commands[cur][0]){
		if (commands[cur][1] == 0){	// 시계 방향 회전
			for (int iM = 0; iM < commands[cur][2]; iM++){
				int temp = circlePanel[iN][M - 1];
				circlePanel[iN].pop_back();
				circlePanel[iN].insert(circlePanel[iN].begin(), temp);
			}
		}
		else{	//반시계 방향 회전 
			for (int iM = 0; iM < commands[cur][2]; iM++){
				int temp = circlePanel[iN][0];
				circlePanel[iN].erase(circlePanel[iN].begin());
				circlePanel[iN].push_back(temp);
			}
		}
	}
}

void del(vector<vector<bool>> &temp){
	for (int i = 0; i < N; i++){
		for (int j = 0; j < M; j++){
			if (temp[i][j]){
				circlePanel[i][j] = 0;
			}
		}
	}
}

void compansate(){
	int sum = 0, cnt = 0;
	double avg;
	for (int i = 0; i < N; i++){
		for (int j = 0; j < M; j++){
			if (circlePanel[i][j] != 0){
				sum += circlePanel[i][j];
				cnt++;
			}
		}
	}

	if (cnt != 0){
		avg = (double)sum / (double)cnt;
	}

	for (int i = 0; i < N; i++){
		for (int j = 0; j < M; j++){
			if (circlePanel[i][j] != 0){
				if ((double)circlePanel[i][j] > avg){
					circlePanel[i][j]--;
				}
				else if ((double)circlePanel[i][j] < avg){
					circlePanel[i][j]++;
				}
			}
		}
	}
}

void check(){
	bool checkCase = false;
	vector<vector<bool>> temp(N, vector<bool>(M, false));
	for (int i = 0; i < N; i++){
		for (int j = 0; j < M; j++){
			for (int k = 0; k < 4; k++){
				int ni = i + dir[k][0];
				int nj = j + dir[k][1];

				if (nj == -1){
					nj = M - 1;
				}
				else if (nj == M){
					nj = 0;
				}
				
				if (ni >= 0 && ni < N && circlePanel[i][j] != 0){
					if (circlePanel[i][j] == circlePanel[ni][nj]){
						temp[i][j] = true;
						temp[ni][nj] = true;
						checkCase = true;
					}
				}
			}
		}
	}

	if (checkCase){
		del(temp);
	}
	else{
		compansate();
	}

}


int main(void) {
	circlePanel.clear();
	commands.clear();

	scanf("%d %d %d", &N, &M, &T);
	circlePanel.assign(N,vector<int>(M,0));
	commands.assign(T, vector<int>(3, 0));

	for (int i = 0; i < N; i++){
		for (int j = 0; j < M; j++){
			scanf("%d", &circlePanel[i][j]);
		}
	}

	for (int i = 0; i < T; i++){
		scanf("%d %d %d", &commands[i][0], &commands[i][1], &commands[i][2]);
		//이동
		rotate(i);
		check();
	}

	printf("%d", calculate());
	return 0;
}